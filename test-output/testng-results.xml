<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-09-09T18:45:49 IST" name="All Test Suite" finished-at="2021-09-09T19:20:24 IST" duration-ms="2075670">
    <groups>
    </groups>
    <test started-at="2021-09-09T18:45:49 IST" name="C:/Users/juee.ningshetti/IdeaProjects/Intellidoc/src/Tests/LoginTest.java" finished-at="2021-09-09T19:20:24 IST" duration-ms="2075670">
      <class name="Tests.EditProfileTest">
        <test-method is-config="true" signature="startTest()[pri:0, instance:Tests.EditProfileTest@58c1c010]" started-at="2021-09-09T19:04:33 IST" name="startTest" finished-at="2021-09-09T19:04:33 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="EditProfileFlow()[pri:0, instance:Tests.EditProfileTest@58c1c010]" started-at="2021-09-09T19:04:33 IST" name="EditProfileFlow" finished-at="2021-09-09T19:05:43 IST" duration-ms="69707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditProfileFlow -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Tests.EditProfileTest@58c1c010]" started-at="2021-09-09T19:05:43 IST" name="endTest" finished-at="2021-09-09T19:05:43 IST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- Tests.EditProfileTest -->
      <class name="Tests.DatasetTest">
        <test-method is-config="true" signature="startTest()[pri:0, instance:Tests.DatasetTest@4d339552]" started-at="2021-09-09T19:12:01 IST" name="startTest" finished-at="2021-09-09T19:12:01 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="DataSetFlow()[pri:0, instance:Tests.DatasetTest@4d339552]" started-at="2021-09-09T19:12:01 IST" name="DataSetFlow" finished-at="2021-09-09T19:14:24 IST" duration-ms="143090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DataSetFlow -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Tests.DatasetTest@4d339552]" started-at="2021-09-09T19:14:24 IST" name="endTest" finished-at="2021-09-09T19:14:24 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- Tests.DatasetTest -->
      <class name="Tests.DocumentTest">
        <test-method is-config="true" signature="startTest()[pri:0, instance:Tests.DocumentTest@551bdc27]" started-at="2021-09-09T18:45:49 IST" name="startTest" finished-at="2021-09-09T18:45:49 IST" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="DocumentFlow()[pri:0, instance:Tests.DocumentTest@551bdc27]" started-at="2021-09-09T18:45:49 IST" name="DocumentFlow" finished-at="2021-09-09T18:52:05 IST" duration-ms="375939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DocumentFlow -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Tests.DocumentTest@551bdc27]" started-at="2021-09-09T18:52:05 IST" name="endTest" finished-at="2021-09-09T18:52:05 IST" duration-ms="305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- Tests.DocumentTest -->
      <class name="Tests.ProjectFlowTest">
        <test-method is-config="true" signature="startTest()[pri:0, instance:Tests.ProjectFlowTest@3f200884]" started-at="2021-09-09T19:07:49 IST" name="startTest" finished-at="2021-09-09T19:07:49 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="ProjectFlow()[pri:0, instance:Tests.ProjectFlowTest@3f200884]" started-at="2021-09-09T19:07:49 IST" name="ProjectFlow" finished-at="2021-09-09T19:12:01 IST" duration-ms="251462" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProjectFlow -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Tests.ProjectFlowTest@3f200884]" started-at="2021-09-09T19:12:01 IST" name="endTest" finished-at="2021-09-09T19:12:01 IST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- Tests.ProjectFlowTest -->
      <class name="Tests.TemplateTest">
        <test-method is-config="true" signature="startTest()[pri:0, instance:Tests.TemplateTest@b7f23d9]" started-at="2021-09-09T19:05:43 IST" name="startTest" finished-at="2021-09-09T19:05:43 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="TemplateFlow()[pri:0, instance:Tests.TemplateTest@b7f23d9]" started-at="2021-09-09T19:05:43 IST" name="TemplateFlow" finished-at="2021-09-09T19:07:49 IST" duration-ms="126264" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Demo-New1] but found [YOURK_TEMPLATE]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Demo-New1] but found [YOURK_TEMPLATE]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at Pages.TemplatePage.AssertCreatTemplate(TemplatePage.java:96)
at Tests.TemplateTest.TemplateFlow(TemplateTest.java:116)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TemplateFlow -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Tests.TemplateTest@b7f23d9]" started-at="2021-09-09T19:07:49 IST" name="endTest" finished-at="2021-09-09T19:07:49 IST" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- Tests.TemplateTest -->
      <class name="Tests.UpdateUserTest">
        <test-method is-config="true" signature="startTest()[pri:0, instance:Tests.UpdateUserTest@6591f517]" started-at="2021-09-09T19:17:44 IST" name="startTest" finished-at="2021-09-09T19:17:44 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="UpdateUserFlow()[pri:0, instance:Tests.UpdateUserTest@6591f517]" started-at="2021-09-09T19:17:44 IST" name="UpdateUserFlow" finished-at="2021-09-09T19:20:24 IST" duration-ms="160616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateUserFlow -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Tests.UpdateUserTest@6591f517]" started-at="2021-09-09T19:20:24 IST" name="endTest" finished-at="2021-09-09T19:20:24 IST" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- Tests.UpdateUserTest -->
      <class name="Tests.FunctionalTabTest">
        <test-method is-config="true" signature="startTest()[pri:0, instance:Tests.FunctionalTabTest@525b461a]" started-at="2021-09-09T19:00:04 IST" name="startTest" finished-at="2021-09-09T19:00:04 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="FunctionalFlow()[pri:0, instance:Tests.FunctionalTabTest@525b461a]" started-at="2021-09-09T19:00:04 IST" name="FunctionalFlow" finished-at="2021-09-09T19:04:33 IST" duration-ms="268827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FunctionalFlow -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Tests.FunctionalTabTest@525b461a]" started-at="2021-09-09T19:04:33 IST" name="endTest" finished-at="2021-09-09T19:04:33 IST" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- Tests.FunctionalTabTest -->
      <class name="Tests.AnalyticsTest">
        <test-method is-config="true" signature="startTest()[pri:0, instance:Tests.AnalyticsTest@f0f2775]" started-at="2021-09-09T19:14:24 IST" name="startTest" finished-at="2021-09-09T19:14:24 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="AnalyticsFlow()[pri:0, instance:Tests.AnalyticsTest@f0f2775]" started-at="2021-09-09T19:14:24 IST" name="AnalyticsFlow" finished-at="2021-09-09T19:15:14 IST" duration-ms="50031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AnalyticsFlow -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Tests.AnalyticsTest@f0f2775]" started-at="2021-09-09T19:15:14 IST" name="endTest" finished-at="2021-09-09T19:15:14 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- Tests.AnalyticsTest -->
      <class name="Tests.LoginTest">
        <test-method is-config="true" signature="startTest()[pri:0, instance:Tests.LoginTest@6a472554]" started-at="2021-09-09T18:53:55 IST" name="startTest" finished-at="2021-09-09T18:53:55 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="LoginTestFlow()[pri:0, instance:Tests.LoginTest@6a472554]" started-at="2021-09-09T18:53:55 IST" name="LoginTestFlow" finished-at="2021-09-09T18:58:38 IST" duration-ms="282277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTestFlow -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Tests.LoginTest@6a472554]" started-at="2021-09-09T18:58:38 IST" name="endTest" finished-at="2021-09-09T18:58:38 IST" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- Tests.LoginTest -->
      <class name="Tests.RoleWiseTest">
        <test-method is-config="true" signature="startTest()[pri:0, instance:Tests.RoleWiseTest@3d36e4cd]" started-at="2021-09-09T18:52:05 IST" name="startTest" finished-at="2021-09-09T18:52:05 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="RoleWiseFlow()[pri:0, instance:Tests.RoleWiseTest@3d36e4cd]" started-at="2021-09-09T18:52:05 IST" name="RoleWiseFlow" finished-at="2021-09-09T18:53:55 IST" duration-ms="110276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RoleWiseFlow -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Tests.RoleWiseTest@3d36e4cd]" started-at="2021-09-09T18:53:55 IST" name="endTest" finished-at="2021-09-09T18:53:55 IST" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- Tests.RoleWiseTest -->
      <class name="Tests.ForgetPwdTest">
        <test-method is-config="true" signature="startTest()[pri:0, instance:Tests.ForgetPwdTest@7ff2a664]" started-at="2021-09-09T18:58:38 IST" name="startTest" finished-at="2021-09-09T18:58:38 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="ForgotPwdFlow()[pri:0, instance:Tests.ForgetPwdTest@7ff2a664]" started-at="2021-09-09T18:58:38 IST" name="ForgotPwdFlow" finished-at="2021-09-09T19:00:04 IST" duration-ms="86324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ForgotPwdFlow -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Tests.ForgetPwdTest@7ff2a664]" started-at="2021-09-09T19:00:04 IST" name="endTest" finished-at="2021-09-09T19:00:04 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- Tests.ForgetPwdTest -->
      <class name="Tests.CreateUserTest">
        <test-method is-config="true" signature="startTest()[pri:0, instance:Tests.CreateUserTest@5a4aa2f2]" started-at="2021-09-09T19:15:14 IST" name="startTest" finished-at="2021-09-09T19:15:14 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="CreateUserFlow()[pri:0, instance:Tests.CreateUserTest@5a4aa2f2]" started-at="2021-09-09T19:15:14 IST" name="CreateUserFlow" finished-at="2021-09-09T19:17:44 IST" duration-ms="149666" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateUserFlow -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:Tests.CreateUserTest@5a4aa2f2]" started-at="2021-09-09T19:17:44 IST" name="endTest" finished-at="2021-09-09T19:17:44 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- Tests.CreateUserTest -->
    </test> <!-- C:/Users/juee.ningshetti/IdeaProjects/Intellidoc/src/Tests/LoginTest.java -->
  </suite> <!-- All Test Suite -->
</testng-results>
